{"version":3,"sources":["components/Graph.js","components/Colorbar.js","components/SocialDataLayer.js","assets/icons/level.svg","components/Map.js","components/Navbar.js","components/TimeSlider.js","config.js","assets/icons/logo.png","App.js","reportWebVitals.js","index.js"],"names":["DyGraph","props","graphRef","useRef","console","log","useEffect","Dygraph","current","url","title","ylabel","xlabel","gridLineWidth","_jsx","ref","Colorbar","context","useLeafletContext","L","Control","extend","onAdd","map","container","DomUtil","create","src","colorbar","onRemove","control","opts","layerContainer","position","addControl","removeControl","SocialDataLayer","_ref","data","GeoJSON","style","feature","color","d","properties","SSVI","pointToLayer","latlng","CircleMarker","radius","fillOpacity","onEachFeature","layer","popupContent","concat","Zila","Upazila","Number","Poverty","toFixed","Female","Children","Elderly","WithDisability","WeakHousing","UnpavedRoad","Hospitals","PolderCoverage","ExposedPopulation50","bindPopup","icon_level","icon","iconUrl","marker_level","iconSize","Map","dataurl","config","forecast","timestep","shsData","tileurl","cycle","forecasts","elev","layers","type","folder","setUrl","_jsxs","MapContainer","center","bounds","latLngBounds","latLng","south","west","north","east","zoom","scrollWheelZoom","minZoom","minzoom","maxZoom","maxzoom","width","height","children","LayersControl","BaseLayer","checked","name","TileLayer","attribution","zIndex","Overlay","LayerGroup","stations","station","Marker","Lat","Lon","Popup","maxWidth","Tooltip","ID","Name","Organization","tms","opacity","ScaleControl","metric","imperial","BasicNavbar","sitename","navbar","setForecast","cycles","handleChange","e","newstate","target","date","value","replaceAll","Navbar","bg","expand","Container","Toggle","Brand","href","alt","branding","Collapse","id","Nav","className","NavDropdown","Item","Divider","Row","Col","Form","min","defaultValue","placeholder","onChange","Select","item","selected","TimeSlider","setTimestep","steps","timestamps","max","length","starttime","time","endtime","index","useState","handleStepChange","direction","newIndex","split","list","_ref2","step","parseInt","class","Button","onClick","xmlns","fill","viewBox","App","platformStatus","setPlatformStatus","platformStatusUrl","fetch","then","async","response","json","ok","error","message","statusText","Promise","reject","catch","errormessage","toString","selectedforecast","setSelectedForecast","fallback_forecast","urlCycle","URLSearchParams","window","location","search","get","substring","available","lastforecast","manifestUrl","payload","ModalInformation","Modal","size","centered","Header","closeButton","Title","Body","Footer","onHide","modalShow","setModalShow","React","_Fragment","Alert","variant","show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6ad34f.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Dygraph from \"dygraphs\";\nimport \"dygraphs/dist/dygraph.min.css\";\n\n// Check if an url exists\n// async function exists(url) {\n//     const result = await fetch(url, { method: 'HEAD' });\n//     return result.ok;\n//   }\n\nfunction DyGraph(props) {\n  const graphRef = useRef();\n  console.log(props);\n\n  useEffect(() => {\n    new Dygraph(\n      graphRef.current,\n      props.url,\n      {\n        title: props.title,\n        ylabel: \"Water level (m)\",\n        xlabel: \"Datetime\",\n        gridLineWidth: \"0.1\",\n        // valueRange: [0, null],\n      }\n    );\n  });\n\n  return <div ref={graphRef}></div>;\n}\n\nexport default DyGraph;\n","// https://www.anycodings.com/1questions/1902754/react-leaflet-v3-custom-control\nimport { useLeafletContext } from \"@react-leaflet/core\";\nimport L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport \"./Colorbar.css\";\n\nfunction Colorbar(props) {\n  const context = useLeafletContext();\n\n  L.Control.Colorbar = L.Control.extend({\n    onAdd: function (map) {\n      var container = L.DomUtil.create(\"div\", \"colorbar-container\")\n      var img = L.DomUtil.create(\"img\", \"colorbar\", container);\n\n      img.src = props.colorbar;\n      // img.style.width = \"75px\";\n\n      return container;\n    },\n\n    onRemove: function (map) {\n      // Nothing to do here\n    },\n  });\n\n  L.control.colorbar = function (opts) {\n    return new L.Control.Colorbar(opts);\n  };\n\n  useEffect(() => {\n    const container = context.layerContainer || context.map;\n\n    const control = L.control.colorbar({ position: props.position });\n    container.addControl(control);\n\n    return () => {\n      container.removeControl(control);\n    };\n  });\n\n  return null;\n}\n\nexport default Colorbar;\n","import { useLeafletContext } from \"@react-leaflet/core\";\nimport {\n  GeoJSON\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"react\";\n\nconst SocialDataLayer = function ({ data }) {\n\n  const context = useLeafletContext();\n\n  function getColor(d) {\n    // Generated using colorbrewer\n    return d > 0.9 ? '#67000d' :\n           d > 0.8 ? '#a50f15' :\n           d > 0.7 ? '#cb181d' :\n           d > 0.6 ? '#ef3b2c' :\n           d > 0.5 ? '#fb6a4a' :\n           d > 0.4 ? '#fc9272' :\n           d > 0.3 ? '#fcbba1' :\n           d > 0.2 ? '#fee0d2':\n           d > 0.1 ? '#fff5f0':\n                     '#fff5f0';\n  }\n\n  const jsonSetStyle = function (feature) {\n    return {\n      color: getColor(feature.properties.SSVI),\n    };\n  }\n\n  const jsonPointToLayer = function (feature, latlng) {\n    return new L.CircleMarker(latlng, {\n      radius: 5,\n      fillOpacity: 0.85\n    })\n  }\n\n  const jsonOnEachFeature = function (feature, layer) {\n    let popupContent = `<div style=\"align-items:center;text-align:center;\">\n  <span><b>${feature.properties.Zila} - ${feature.properties.Upazila}</b></span>\\n\n  <table>\n  <tr style=\"border-bottom:1px solid black\">\n    <td colspan=\"100%\"></td>\n  </tr>\n  <tr><td style=\"text-align: right;\">Poverty rate (2011): </td><td>${Number(feature.properties.Poverty).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Female (2011): </td><td>${Number(feature.properties.Female).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Children (2011): </td><td>${Number(feature.properties.Children).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Elderly (2011): </td><td>${Number(feature.properties.Elderly).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Disabled (2011): </td><td>${Number(feature.properties.WithDisability).toFixed(1)}%</td></tr>\n  <tr style=\"border-bottom:1px solid black\">\n    <td colspan=\"100%\"></td>\n  </tr>\n  <tr><td style=\"text-align: right;\">Weak Housing (2011): </td><td>${Number(feature.properties.WeakHousing).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">No Mobile Phone (2011): </td><td>${Number(feature.properties.WeakHousing).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Unpaved road (2017): </td><td>${Number(feature.properties.UnpavedRoad).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Hospitals/10k inhabitants (2016): </td><td>${Number(feature.properties.Hospitals).toFixed(1)}</td></tr>\n  <tr style=\"border-bottom:1px solid black\">\n    <td colspan=\"100%\"></td>\n  </tr>\n  <tr><td style=\"text-align: right;\">Polder Coverage: </td><td>${Number(feature.properties.PolderCoverage).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Shelter Availability: </td><td>${Number(feature.properties.PolderCoverage).toFixed(1)}%</td></tr>\n  <tr><td style=\"text-align: right;\">Exposed Population: </td><td>${Number(feature.properties.ExposedPopulation50).toFixed(1)}%</td></tr>\n  <tr style=\"border-bottom:1px solid black\">\n    <td colspan=\"100%\"></td>\n  </tr>\n  <tr><td style=\"text-align: right;\"><b>SSVI: </b></td><td>${Number(feature.properties.SSVI).toFixed(2)}</td></tr>\n  </table>\n  </div>\n  `;\n\n    if (feature.properties && feature.properties.popupContent) {\n      popupContent += feature.properties.popupContent;\n    }\n\n    layer.bindPopup(popupContent);\n  }\n\n  return (\n    <GeoJSON \n      data={data} \n      style={jsonSetStyle} \n      pointToLayer={jsonPointToLayer} \n      onEachFeature={jsonOnEachFeature}></GeoJSON>\n  );\n\n}\n\nexport default SocialDataLayer;","export default __webpack_public_path__ + \"static/media/level.610b15a1.svg\";","import React, {useEffect, useRef} from 'react';\nimport {\n  MapContainer,\n  TileLayer,\n  LayersControl,\n  LayerGroup,\n  ScaleControl,\n  Marker,\n  Popup,\n  Tooltip,\n  GeoJSON\n} from \"react-leaflet\";\n\nimport { Layer, icon, latLng, latLngBounds } from \"leaflet\";\nimport DyGraph from \"./Graph\";\nimport Colorbar from './Colorbar';\nimport shsData from \"../assets/data/coastal_ssvi_data.json\";\nimport SocialDataLayer from './SocialDataLayer';\nimport L from \"leaflet\";\n\nimport marker_level from \"../assets/icons/level.svg\";\nconst icon_level = icon({\n  iconUrl: marker_level,\n  iconSize: [24, 24]\n});\n\n// Main component\nfunction Map({dataurl, config, forecast, timestep}) {\n\n  console.log(\"From Map container\", config, forecast, timestep);\n  console.log(shsData);\n\n  // const ref = useRef(null);\n  // const waterLevelsUrl = props.forecast.url + '/' + props.forecast.folder + '/' + props.forecast.branch + '/waterlevels/'\n  // const waterLevelsUrl = props.forecast.url + '/' + props.forecast.folder + '/forecasts/elev/tiles'\n  // const stationUrl = props.forecast.url + '/' + props.forecast.folder + '/forecasts/elev/stations'\n  // const layerUrl = waterLevelsUrl + props.layer.folder + \"/{z}/{x}/{y}.png\";\n  const tileurl = dataurl + '/' + forecast.cycle + '/' + forecast.forecasts.elev.src + '/' + forecast.forecasts.elev.layers[0].type + '/' + timestep.folder + \"/{z}/{x}/{y}.png\";\n\n  console.log(tileurl);\n\n  const ref = useRef(null);\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.setUrl(tileurl);\n    }\n  }, [tileurl]);\n\n  return (\n    <MapContainer\n      // key={props.forecast.date + props.forecast.cycle}\n      center={config.center}\n      bounds={latLngBounds(latLng(config.bounds.south, config.bounds.west), latLng(config.bounds.north, config.bounds.east))}\n      zoom={config.zoom}\n      scrollWheelZoom={true}\n      minZoom={config.minzoom}\n      maxZoom={config.maxzoom}\n      style={{ width: \"100vw\", height: \"100%\"}}\n    >\n\n      <LayersControl position=\"topright\">\n      <LayersControl.BaseLayer checked name=\"OSM - Standard\">\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            zIndex={1}\n          />\n        </LayersControl.BaseLayer>\n\n        <LayersControl.BaseLayer name=\"ESRI Satellite\">\n          <TileLayer\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            zIndex={1}\n          />\n        </LayersControl.BaseLayer>\n\n        <LayersControl.Overlay checked name=\"Forecast Stations\">\n        <LayerGroup>\n            {\n            forecast.forecasts.elev.layers[1].stations.map( (station) => (\n              <Marker\n                key={station.ID}\n                position={[station.Lat, station.Lon]}\n                icon={icon_level}\n              >\n                <Popup maxWidth={\"80%\"}>\n                  <Tooltip>\n                    Station ID: {station.ID} <br />\n                    Station Name: {station.Name} <br />\n                    Longitude: {station.Lon} <br />\n                    Latitude: {station.Lat} <br />\n                  </Tooltip>\n                  <DyGraph\n                  url={dataurl + '/' + forecast.cycle + '/' + forecast.forecasts.elev.src + '/' + forecast.forecasts.elev.layers[1].type + '/' + station.ID + '.csv'}\n                  title={station.Name + ' - ' + station.Organization}\n                  />\n                </Popup>\n              </Marker>  \n            ))\n          }\n        </LayerGroup>\n        </LayersControl.Overlay>\n\n        <LayersControl.Overlay name=\"Social Indicators\">\n          <SocialDataLayer data={shsData}></SocialDataLayer>\n        </LayersControl.Overlay>\n\n      </LayersControl>\n      \n      <TileLayer\n        url={tileurl}\n        tms={true}\n        opacity={1}\n        zIndex={10}\n        ref={ref}\n      ></TileLayer>\n\n      <Colorbar \n        position=\"bottomright\" \n        colorbar={dataurl + '/' + forecast.cycle + '/' + forecast.forecasts.elev.src + '/' + forecast.forecasts.elev.layers[0].type + '/' + 'colorbar.png'}>\n      </Colorbar>\n      \n      <ScaleControl\n        position=\"bottomleft\"\n        metric={true}\n        imperial={true}\n        maxWidth={200}\n      ></ScaleControl>\n    </MapContainer>\n  );\n}\n\nexport default Map;\n","import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction BasicNavbar({sitename, navbar, forecast, setForecast, cycles}) {\n\n    // console.log('From navbar', forecast);\n\n    const handleChange = (e) => {\n        const newstate = {...forecast};\n        switch (e.target.name) {\n            case \"forecastdate\":\n                newstate.date = e.target.value;\n                newstate.folder = `${e.target.value.replaceAll(\"-\",\"\")}${forecast.cycle}`;\n                break;\n            case \"forecastcycle\":\n                newstate.cycle = e.target.value;\n                newstate.folder = `${forecast.date.replaceAll(\"-\",\"\")}${e.target.value}`;\n                break;\n            default:\n                break;\n        }\n        \n        setForecast(newstate);\n    };\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Brand href=\"/\">\n                    <img alt={sitename} src={navbar.branding.icon} height=\"35px\"/>\n            </Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Navbar.Brand href=\"/\"><b>BandSOS</b></Navbar.Brand>\n            <Nav className=\"me-auto\">\n                <NavDropdown title=\"Data\">\n                    <NavDropdown.Item href=\"https://zenodo.org/doi/10.5281/zenodo.10371338\">Intertidal Topography</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://github.com/bandsos/social-science-data\">Social Science Data</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"About\">\n                    <NavDropdown.Item href=\"https://www.spaceclimateobservatory.org/band-sos-bengal-delta\">Project</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://github.com/bandsos/\">Website</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://github.com/schism-dev/schism\">Model</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://github.com/bandsos/status\">System Status</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Partners\">\n                    <NavDropdown.Item href=\"https://www.bwdb.gov.bd\">BWDB</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://ffwc.gov.bd\">FFWC</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"https://www.ird.fr\">IRD</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://lienss.univ-lr.fr\">LIENSs</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://www.legos.omp.eu/\">LEGOS</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Past Named Cyclones\">\n                    <NavDropdown.Item href=\"https://bandsos.github.io/?cycle=2022102400\">2022 - Cyclone Sitrang - Oct 22 to Oct 25</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://bandsos.github.io/?cycle=2023051300\">2023 - Cyclone Mocha - May 9 to May 15</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://bandsos.github.io/?cycle=2023102400\">2023 - Cyclone Hamoon - Oct 21 to Oct 25</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://bandsos.github.io/?cycle=2023111700\">2023 - Cyclone Midhili - Nov 14 to Nov 18</NavDropdown.Item>\n                    <NavDropdown.Item href=\"https://bandsos.github.io/?cycle=2024052600\">2024 - Cyclone Remal - May 24 to May 28</NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n            </Navbar.Collapse>\n            <Row>\n                <Col>\n                    <Form.Control \n                        type=\"date\" \n                        name=\"forecastdate\"\n                        min=\"2020-01-01\"\n                        defaultValue={forecast.date}\n                        placeholder=\"Forecast Date\" \n                        onChange={handleChange}\n                        />\n                </Col>\n                <Col>\n                    <Form.Select placeholder='Cycle' name=\"forecastcycle\" onChange={handleChange}>\n                        {\n                            cycles.map( (item) =>\n                               {\n                                    if (forecast.cycle === item) {\n                                        return(<option key={item} value={item} selected>{item}Z</option>);\n                                    } else {\n                                        return(<option key={item} value={item}>{item}Z</option>);\n                                    }\n                                    \n                               }\n                            )\n                        }\n                    </Form.Select>\n                </Col>\n            </Row>\n        </Container>\n        </Navbar>\n    );\n}\n\nexport default BasicNavbar;","import { useState } from \"react\";\nimport { Container, Button } from \"react-bootstrap\"; // Import Button from react-bootstrap\n\nimport \"./TimeSlider.css\";\n\nconst TimeSlider = function ({forecast, setTimestep}) {\n    console.log(\"from timeslider\", forecast);\n    const steps = forecast.forecasts.elev.layers[0].timestamps; \n    const min = 0;\n    const max = min + steps.length - 1;\n    const initindex = 8;\n    const starttime = steps[0].time;\n    const endtime = steps[max].time;\n\n    const [index, onChange] = useState(initindex);\n\n    //step change with buttons\n    const handleStepChange = (direction) => {\n        let newIndex = index;\n        if (direction === 'left' && index > min) {\n            newIndex = index - 1;\n        } else if (direction === 'right' && index < max) {\n            newIndex = index + 1;\n        }\n        onChange(newIndex);\n        setTimestep({folder:steps[newIndex].folder});\n    };\n    \n    return (\n        <Container className=\"timeslider-outer\">\n            <div className=\"timeslider-parent\">\n                <div id='starttime'>\n                    <div>{starttime.split(\" \")[0]} </div>\n                    <div>{starttime.split(\" \")[1].split(\":\")[0]}h UTC</div>\n                </div>\n                \n                <div id=\"timeslider\">\n                    <input \n                        type=\"range\" \n                        id='range' \n                        className=\"slider\"\n                        list=\"values\" \n                        min={min} \n                        max={max} \n                        value={index}\n                        onChange={ ({target: {value: step} }) => {\n                            onChange(parseInt(step)); // Ensure step is treated as a number\n                            setTimestep({folder:steps[step].folder});\n                        }}\n                        />\n                    <output></output>\n                    <div class='range-slider__progress'></div>\n                    <div id=\"buble\">Currently viewing: <b>{steps[index].time}</b></div>\n                </div>\n                \n                <div id='endtime'>\n                    <div>{endtime.split(\" \")[0]} </div>\n                    <div>{endtime.split(\" \")[1].split(\":\")[0]}h UTC</div>\n                </div>\n                \n                <div class=\"buttonContainer\">\n                    <div class = \"spacer\">\n                        <Button type=\"button\" class=\"sliderButton btn btn-primary btn-sm\" onClick={() => handleStepChange('left')}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-left-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\" />\n                            </svg>\n                        </Button>\n                    </div>\n\n                    <div class = \"spacer\">\n                        <Button type=\"button\" class=\"sliderButton btn btn-primary btn-sm\" onClick={() => handleStepChange('right')}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\" />\n                            </svg>\n                        </Button>\n                    </div>\n                </div>\n\n                <div class=\"mobileDisplay\">\n\n                    <div class = \"mobileButtons\">\n                        <div class = \"spacer\">\n                        <Button type=\"button\" class=\"sliderButton btn btn-primary btn-sm\" onClick={() => handleStepChange('left')}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-left-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\" />\n                            </svg>\n                        </Button>\n                        </div>\n                        \n                        <div class = \"spacer\">\n                        <Button type=\"button\" class=\"sliderButton btn btn-primary btn-sm\" onClick={() => handleStepChange('right')}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n                                <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\" />\n                            </svg>\n                        </Button>\n                        </div>\n                    </div>\n\n                    <div id=\"buble\"><b>{steps[index].time}</b></div>\n                </div>\n\n\n            </div>\n        </Container>\n    );\n}\n\nexport default TimeSlider;","import logo from \"./assets/icons/logo.png\";\n\nlet config = {\n    \"sitename\":\"BandSOS\",\n    \"dataurl\":\"https://bandsos.github.io\",\n    \"map\":{\n        \"mapcenter\":[22, 90], // [lat, long], Bangladesh\n        \"bounds\":{\n            \"east\":85,\n            \"west\":95,\n            \"south\":20,\n            \"north\":24\n        },\n        \"zoom\":9,\n        \"minzoom\":6,\n        \"maxzoom\":10\n    },\n    \"navbar\":{\n        \"branding\":{\n            \"icon\": logo\n        },\n    },\n    \"cycles\":[\"00\", \"06\", \"12\", \"18\"],\n    \"fallback_forecast\":{\n        date: '2022-10-01',\n        cycle: '00'\n    }\n}\n\nexport default config;\n","export default __webpack_public_path__ + \"static/media/logo.3729d826.png\";","import React, { useState, useEffect } from \"react\";\n\nimport Map from \"./components/Map\";\nimport BasicNavbar from \"./components/Navbar\";\nimport TimeSlider from \"./components/TimeSlider\";\n\nimport NewNavbar from \"./molecules/rkNavbar\";\nimport NewTimeSlider from \"./molecules/rkTimeSlider\";\n\nimport config from \"./config\";\n\n// Stylesheets\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\nimport { Alert, Container } from \"react-bootstrap\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n//run command: npm start\n\n/*\n  Rounaq WTF comments:\n  - Layer Control is pretty tricky. But they don't go to the highest possible numerical z-index: 2147483647\n  - what is <output> tag in TimeSlider.js? \n  \n*/\n\n// The main application\nexport default function App() {\n  console.log('Site config', config);\n\n  // Load platform status\n  const [platformStatus, setPlatformStatus] = useState({\"available\":false, \"data\":{}});\n  useEffect( () => {\n    const platformStatusUrl = config.dataurl + '/status/status.json';\n    fetch(platformStatusUrl)\n    .then( async response => {\n      const data = await response.json();\n      \n      if (!response.ok) {\n        const error = (data && data.message) || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setPlatformStatus({\"available\":true, \"data\":data});\n    })\n    .catch(error => {\n      setPlatformStatus({errormessage: error.toString()});\n      console.error('Error loading manifest from ', platformStatusUrl);\n    });\n  }, []);\n\n  console.log('Platform status: ', platformStatus);\n\n  // Forecast date and time selection in <Navbar>\n  const [selectedforecast, setSelectedForecast] = useState({\n    \"downloaded\": false,\n    \"date\": config.fallback_forecast.date,\n    \"cycle\": config.fallback_forecast.cycle,\n    \"dataurl\": config.dataurl,\n    \"folder\": `${config.fallback_forecast.date.replaceAll(\"-\",\"\")}${config.fallback_forecast.cycle}`\n  });\n\n  // Checking if cycle is passed\n  const queryParameters = new URLSearchParams(window.location.search);\n  const urlCycle = queryParameters.get(\"cycle\");\n\n  useEffect( () => {\n    if (urlCycle != null) {\n      setSelectedForecast({\n        \"downloaded\": true,\n        \"date\": `${urlCycle.substring(0, 4)}-${urlCycle.substring(4, 6)}-${urlCycle.substring(6, 8)}`,\n        \"cycle\": urlCycle.substring(8, 10),\n        \"dataurl\": config.dataurl,\n        \"folder\": urlCycle\n      })\n    }\n    else if (platformStatus.available) {\n      setSelectedForecast({\n        \"downloaded\": true,\n        \"date\": platformStatus.data.lastforecast.date,\n        \"cycle\": platformStatus.data.lastforecast.cycle,\n        \"dataurl\": config.dataurl,\n        \"folder\": `${platformStatus.data.lastforecast.date.replaceAll(\"-\",\"\")}${platformStatus.data.lastforecast.cycle}`\n      });\n    }\n  }, [platformStatus]);\n\n  console.log('Selected forecast', selectedforecast);\n\n  // forecast manifest\n  const [forecast, setForecast] = useState({\"available\":false, \"payload\":{}});\n  useEffect( () => {\n    // Updating manifest for the selected forecast\n    const manifestUrl = selectedforecast.dataurl + '/' +  selectedforecast.folder + '/' +  'manifest.json';\n    fetch(manifestUrl)\n    .then( async response => {\n      const data = await response.json();\n      \n      if (!response.ok) {\n        const error = (data && data.message) || response.statusText;\n        return Promise.reject(error);\n      }\n\n      setForecast({available: true, payload: data});\n    })\n    .catch(error => {\n      setForecast({errormessage: error.toString()});\n      console.error('Error loading manifest from ', selectedforecast.url);\n    });\n  }, [selectedforecast]);\n\n  // Forecast layer selection from water level forecast <TimeSlider>\n  const [timestep, setTimestep] = useState({\n    folder: selectedforecast.folder\n  });\n  useEffect( () => {\n    setTimestep({\"folder\":selectedforecast.folder})\n  }, [selectedforecast]);\n\n  // Hotfix warning container\nfunction ModalInformation(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Under maintenance!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          The computational backend of BandSOS is currently under maintenance. The last generated forecast is displayed.\n          The system will come back online as soon as possible!\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nconst [modalShow, setModalShow] = React.useState(true);\n\n  return (\n    <>\n    <div id=\"wrapper\">\n      {\n        platformStatus.available\n        ? <div id=\"header\">\n          <BasicNavbar\n            sitename={config.sitename}\n            navbar={config.navbar}\n            forecast={selectedforecast}\n            setForecast={setSelectedForecast}\n            cycles={config.cycles}\n          >\n          </BasicNavbar>\n          {/* <NewNavbar></NewNavbar> */}\n          </div>\n        : <div id=\"header\">\n          <BasicNavbar\n            sitename={config.sitename}\n            navbar={config.navbar}\n            forecast={{'date':'', 'cycle':''}}\n            setForecast={setSelectedForecast}\n            cycles={config.cycles}\n          ></BasicNavbar>\n          </div>\n      }\n      \n      {\n        forecast.available\n        ? <>\n          <div id=\"content\">\n          \n          <Map\n            dataurl={selectedforecast.dataurl}\n            config={config.map}\n            forecast={forecast.payload}\n            timestep={timestep}\n            setTimestep={setTimestep}\n          >\n          </Map>\n          </div>\n          <div id=\"onTop\">\n              <TimeSlider forecast={forecast.payload} setTimestep={setTimestep}></TimeSlider>\n          </div>\n          </>\n        : <Container>\n          <Alert className=\"\" variant=\"danger\" key=\"danger\">\n            Forecast for {selectedforecast.date} cycle {selectedforecast.cycle} not available!\n            </Alert>\n          </Container>\n      }\n    </div>\n\n    {/* Hotfix warning */}\n    <ModalInformation\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\n// const styles = StyleSheet.create({\n// });","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}